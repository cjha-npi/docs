/* doxy-plus.css */

/* Variable names starting with --dp- are Doxy-Plus variables */

/*━━━HEIGHT CALCULATION━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  svh = small viewport height (URL/bottom bars shown) → footer won’t get pushed off.
  dvh = dynamic viewport height (updates as bars hide/show) → can resize on scroll.

  WARNING: DO NOT USE 'svh'. When 'svh' is used the height of the panes will be the
  maximum height of the contents and if the contents height is smaller than the height
  available then the panes will shrink in size.

  We put height calculation with 'vh' first and then with 'dvh'. This makes the first
  one as the fallback height. Older browsers that do not support the newer 'dvh' will
  ignore the second height and use the first one, while newer browsers that support
  the 'dvh' height will use the second one.
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/

/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/
/* CUSTOM FONT FOR EXPAND/COLLAPSE ICONS ONLY */
/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/

/*
 - NotoSansSymbols2-Regular.ttf is the fallback for older browsers
 - Only collapse icon (U+2B9E i.e. ⮞) is used, in expanded state, it
   is rotated by 90 degrees.
*/
@font-face {
  font-family: "noto-2b9";
  src: url("NotoSansSymbols2-Regular.woff2") format("woff2"), url("NotoSansSymbols2-Regular.ttf") format("truetype"); /* .ttf is optional fallback */
  font-display: swap;
  unicode-range: U+2B9E, U+2B9F; /* ⮞, ⮟ */
}

/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/
/* CUSTOMIZING IN-BUILT FONT VALUES */
/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/

/* Font sizes for desktop view */
html {
  --page-font-size: 13px !important;
  --navigation-font-size: 13px !important;
  --toc-font-size: 13px !important;
  --code-font-size: 12px !important;
  --title-font-size: 18px !important;
  --memtitle-font-size: 16px !important;
}

/* Font sizes for mobile view */
@media screen and (max-width: 767px) {
  html {
    --page-font-size: 13px !important;
    --navigation-font-size: 13px !important;
    --toc-font-size: 13px !important;
    --code-font-size: 12px !important;
    --title-font-size: 16px !important;
    --memtitle-font-size: 16px !important;
  }
}

/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/
/* CUSTOM ORIGINAL VALUES */
/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/

:root {
  /* 
    Search field selection label text, replaces the default magnifier icon.
    This is set through the doxy-plus.js file.
  */
  --dp-search-field: "All:";

  /* Font size and line height for root and leaf pane items */
  --dp-item-font-size: 12px;
  --dp-item-line-height: 20px;

  /* Font size for collapse icon in root, leaf panes and side nav */
  --dp-exp-col-icon-font-size: 13px;

  /* Font size and line height for page nav */
  --dp-page-nav-font-size: 11px;
  --dp-page-nav-line-height: 18px;

  /* Common separation value, mainly between panes */
  --dp-sep: 5px;

  /* Minimum width of resizable navs and panes */
  --dp-min-width: 50px;

  /* Common border radius for panes and everything else */
  --dp-border-radius: 6px;

  /* Width of various navigation panes. Root and Leaf are doxy-plus nav panes */
  --dp-side-nav-width: 0px;
  --dp-root-pane-width: 0px;
  --dp-leaf-pane-width: 0px;

  /* Height (including any borders) for header and footer */
  --dp-header-height: 0px;
  --dp-footer-height: 0px;

  /* doc-content header's height and bottom border*/
  --dp-doc-header-height: 0px;
  --dp-doc-header-border: 2px;

  /*
    Main document area starting Y-Pos and Height.
    The calculation with 'dvh' is later so that it overrides the calculation with
    'vh'. Newer browsers have the 'dvh' while older ones only have 'vh'. See the
    section 'HEIGHT CALCULATION' at the top for detailed understanding.
  */
  --dp-main-y: calc(var(--dp-header-height) + (2 * var(--dp-sep)));
  --dp-main-h: calc(100vh - var(--dp-header-height) - var(--dp-footer-height) - (4 * var(--dp-sep)));
  --dp-main-h: calc(100dvh - var(--dp-header-height) - var(--dp-footer-height) - (4 * var(--dp-sep)));

  /* Margin on the left of doc-content for sidebars. By default it is for side-nav. */
  --dp-doc-margin-left: calc(var(--dp-side-nav-width) + (2 * var(--dp-sep)));
}

/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/
/* COLOR VALUES */
/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/

/* LIGHT MODE */
html {
  /* Default colors defined by Doxygen or Doxygen Awesome */
  --page-background-color: rgb(210, 210, 210) !important; /* forms the separator between panes*/
  --separator-color: rgb(200, 200, 200) !important;
  --code-background: rgb(225, 230, 235) !important;
  --fragment-background: rgb(235, 240, 245) !important;

  /* Doxy-Plus Colors */
  --dp-pane-color: rgb(255, 255, 255); /* used as background for all panes */
  --dp-mark-color: rgb(20, 120, 200); /* used to mark current item */
  --dp-inpt-color: var(--page-background-color); /* search input box background */
  --dp-line-color: var(--separator-color); /* used as special lines by doxy-plus */
  --dp-item-color: var(--page-background-color); /* current item background */
  --dp-item-hover-color: rgb(from var(--dp-item-color) r g b / 0.8); /* background of a hovered item */
  --dp-icon-hover-color: var(--dp-mark-color); /* color of the button icon when hovered */
  --dp-icon-color: rgb(from var(--dp-icon-hover-color) r g b / 0.8); /* button icons on top right */
  --dp-scrollbar-color: var(--separator-color); /* scrollbar button and handle color */
  --dp-seach-clear-icon-color: rgb(255, 0, 0); /* color of the clear icon in search bar */
  --dp-text-visited-color: rgb(200, 50, 200); /* visited entry in root and leaf panes */
  --dp-text-disabled-color: rgb(120, 120, 120); /* disabled entries in root and leaf panes */
  --dp-text-search-select-color: var(--dp-mark-color); /* search select text color */
  --dp-text-page-nav-section-color: rgb(200, 100, 0); /* section entries in page nav */
  --dp-footer-link-separation-color: var(--separator-color); /* separator of links in footer */
  --dp-item-font-weight: 500; /* font weight for root and leaf panes */
}

/* DARK MODE */
html.dark-mode {
  /* Default colors defined by Doxygen or Doxygen Awesome */
  --page-background-color: rgb(10, 10, 10) !important; /* forms the separator between panes*/
  --separator-color: rgb(65, 70, 75) !important;
  --code-background: rgb(25, 25, 25) !important;
  --tablehead-background: rgb(35, 40, 50) !important;
  --blockquote-background: rgb(35, 40, 50) !important;
  --fragment-background: rgb(40, 45, 55) !important;

  /* Doxy-Plus Colors */
  --dp-pane-color: rgb(30, 35, 40); /* used as background for all panes */
  --dp-mark-color: rgb(20, 120, 220); /* used to mark current item */
  --dp-inpt-color: var(--page-background-color); /* search input box background */
  --dp-line-color: var(--separator-color); /* used as special lines by doxy-plus */
  --dp-item-color: var(--page-background-color); /* current item background */
  --dp-item-hover-color: rgb(from var(--dp-item-color) r g b / 0.8); /* background of a hovered item */
  --dp-icon-hover-color: var(--dp-mark-color); /* color of the button icon when hovered */
  --dp-icon-color: rgb(from var(--dp-icon-hover-color) r g b / 0.8); /* button icons on top right */
  --dp-scrollbar-color: var(--separator-color); /* scrollbar button and handle color */
  --dp-seach-clear-icon-color: rgb(255, 0, 0); /* color of the clear icon in search bar */
  --dp-text-visited-color: rgb(250, 100, 250); /* visited entry in root and leaf panes */
  --dp-text-disabled-color: rgb(120, 120, 120); /* disabled entries in root and leaf panes */
  --dp-text-search-select-color: var(--dp-mark-color); /* search select text color */
  --dp-text-page-nav-section-color: rgb(240, 120, 0); /* section entries in page nav */
  --dp-footer-link-separation-color: var(--separator-color); /* separator of links in footer */
  --dp-item-font-weight: 400; /* font weight for root and leaf panes */
}

/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/
/* HTML + Body settings */
/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/

html,
body {
  /* Ensure the page can scroll => enables pull-to-refresh */
  overflow-x: hidden;
  overflow-y: auto;
  overscroll-behavior-y: auto !important;

  /* Height: See top of this page for detailed description */
  min-height: 100vh; /* fallback for old browsers */
  min-height: 100dvh; /* for use in new browsers */
}

/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/
/* DOC MARGIN LEFT */
/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/

/* Override if only root pane of dual-nav is active */
body[data-dp-dual-nav-active] {
  --dp-doc-margin-left: calc(var(--dp-root-pane-width) + (2 * var(--dp-sep)));
}

/* Override if both root pane and leaf pane of dual-nav are active */
body[data-dp-dual-nav-active][data-dp-leaf-nav-active] {
  --dp-doc-margin-left: calc(var(--dp-root-pane-width) + var(--dp-leaf-pane-width) + (3 * var(--dp-sep)));
}

/* If dual-nav is not active then left margin falls back to side-nav width assigned when '--dp-doc-margin-left' was declared in :root{...} */

/* Zero left margin for mobile view */
@media screen and (max-width: 767px) {
  body {
    --dp-doc-margin-left: var(--dp-sep) !important; /* force small margin for small screens */
  }
}

/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/
/* NAV VISIBILITIES */
/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/

/* default hides both root and leaf pane */
#dp-root-pane,
#dp-leaf-pane,
#dp-root-pane-resizer,
#dp-leaf-pane-resizer {
  display: none;
}

/* we only change the display state when in desktop view */
@media screen and (min-width: 768px) {
  body[data-dp-dual-nav-active] #side-nav {
    display: none;
  }

  body[data-dp-dual-nav-active] #dp-root-pane,
  body[data-dp-dual-nav-active] #dp-root-pane-resizer {
    display: block;
  }

  body[data-dp-dual-nav-active][data-dp-leaf-nav-active] #dp-leaf-pane,
  body[data-dp-dual-nav-active][data-dp-leaf-nav-active] #dp-leaf-pane-resizer {
    display: block;
  }
}

/* mobile view hides root and leaf panes */
@media screen and (max-width: 767px) {
  #dp-root-pane,
  #dp-leaf-pane,
  #dp-root-pane-resizer,
  #dp-leaf-pane-resizer {
    display: none !important;
  }
}

/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/
/* SCROLL BAR CUSTOMIZATION */
/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/

/* Global (modern browsers) */
* {
  scrollbar-width: thin !important; /* Chrome 121+, Edge 121+, Firefox */
  scrollbar-color: var(--dp-scrollbar-color) transparent !important; /* Chrome 121+, Edge 121+, Firefox */
}

/* Back-compat for older Chromium/WebKit */
@supports not (scrollbar-width: thin) {
  *::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }
  *::-webkit-scrollbar-thumb {
    background: var(--dp-scrollbar-color);
    border-radius: 8px;
  }
  *::-webkit-scrollbar-track {
    background: transparent;
  }
}

/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/
/* HEADER AND FOOTER CUSTOMIZATIONS */
/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/

/* Full Header: Title Area + Main Nav + Search Bar Area */
#top {
  background-color: var(--dp-pane-color) !important;
  margin: var(--dp-sep) !important;
  border-radius: var(--dp-border-radius) !important;
  border: none !important;
}

/* Combined section of Project Logo + Project Name + Project Brief on top left */
#titlearea {
  padding: 7px 22px 7px 7px !important;
}

/* Project Brief description just below Project Name on top left, next to Project Logo */
#projectbrief {
  line-height: 13px;
  font-size: 12px !important;
  padding-bottom: 2px;
  font-style: italic !important;
}

/* Right-side border only appears when main nav is on the right */
body:not([data-dp-main-nav-below-title]) #titlearea {
  background: linear-gradient(var(--dp-line-color), var(--dp-line-color)) right 0 top 10px / 1px calc(100% - 20px) no-repeat;
  background-origin: border-box; /* anchor at the outer edge */
}

/* Footer: Style similarly to header */
#nav-path > ul {
  background-color: var(--dp-pane-color) !important;
  margin: var(--dp-sep) !important;
  border-radius: var(--dp-border-radius) !important;
  border: none !important;
  box-shadow: none !important;
}

/* Changing the separator color for bottom footer */
#nav-path .navelem::after {
  --page-background-color: var(--dp-pane-color) !important;
  box-shadow: 4px -4px 0px 0px var(--dp-footer-link-separation-color) !important;
}

/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/
/* MAIN-NAV AND SEARCH CUSTOMIZATIONS */
/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/

/*
  Depending on the main-nav width (its content dependent) and the total
  window width available, the main-nav can be pushed to be below the title.
  In such a case we remove the top padding of the main-nav since the title
   bottom padding serves as a separator space.
*/
body[data-dp-main-nav-below-title] #main-nav {
  padding-top: 0px !important;
}

/* Changing appearence of Search Box */
#MSearchBox {
  border-radius: var(--dp-border-radius) !important;
  border: none !important;
  background: var(--dp-inpt-color) !important;
}

/* 
  Doxygen uses two search boxes for responsive design:
    - #searchBoxPos1: active when screen width is less than 768px (mobile view)
    - #searchBoxPos2: active when screen width is 768px or more (desktop view)

  On desktop, #searchBoxPos2 is positioned with the main navigation
  and header buttons, laid out horizontally. 
  We modify #searchBoxPos2 and the search box inside it to achieve
  improved alignment and spacing in the header.

  Note: Keep these selectors updated if Doxygen template changes.
*/
@media screen and (min-width: 768px) {
  /* 
    #main-menu contains main-nav items and #searchBoxPos2.
    We convert the UL into a flex container to enable a horizontal layout.
  */
  #main-menu {
    display: flex !important;
    flex-wrap: nowrap; /* Prevents menu items from wrapping onto new lines */
    align-items: center; /* Vertically aligns children */
  }

  /* Remove floats from menu items to avoid layout conflicts with flex. */
  #main-menu > li {
    float: none !important;
  }

  /*
    Make #searchBoxPos2 (the LI) a flex container.
    This element will expand to fill remaining space in #main-menu,
    ensuring the search box is right-aligned with other header buttons.
  */
  #searchBoxPos2 {
    display: flex !important;
    flex: 1 1 auto !important; /* Fills leftover space */
    align-items: center; /* vertically center its children */
    justify-content: flex-end !important; /* Align its children to the right */
  }

  /*
    Only #MSearchBox inside #searchBoxPos2 should expand to fill available width.
    All other elements (like buttons/icons) retain their intrinsic size.
    max-width sets a reasonable upper limit for readability.
  */
  #searchBoxPos2 > #MSearchBox {
    flex: 1 1 auto !important; /* Fill all free space inside the LI */
    min-width: 0; /* Allows shrinking if necessary */
    box-sizing: border-box;
    max-width: 400px !important; /* Prevents search box from growing too wide */
  }

  /* 
    Ensure all other children of #searchBoxPos2 keep their original size.
    (Prevents, for example, buttons from stretching.)
  */
  #searchBoxPos2 > *:not(#MSearchBox) {
    flex: 0 0 auto !important;
  }

  /*
    Make sure the <input> field inside #MSearchBox always fills 100% width
    of its container, preventing overflow or awkward gaps.
  */
  #searchBoxPos2 #MSearchBox input {
    width: 100% !important;
    box-sizing: border-box;
  }
}

/*
  The following applies to both search boxes (mobile and desktop):

  #MSearchBox is the container for the entire search bar.
  Set it as a flex container to align and size its child elements.
*/
#MSearchBox {
  display: flex;
  align-items: stretch; /* Make children fill the container height */
}

/* 
  The search box contains two main sections:
    - .left  : icon + text input
    - .right : close ("x") button
  These styles reset vertical alignment and spacing.
*/
#MSearchBox span.left,
#MSearchBox span.right {
  height: 100% !important;
  vertical-align: middle !important;
  margin: 0px !important;
  padding: 0px !important;
  width: auto !important;
}

/* 
  LEFT SIDE: contains the magnifier icon (or custom icon) and input field.
  Make .left a flex container so icon and input are vertically centered.
  Allow .left to grow and shrink as needed, but not overflow the header.
  The max-width calculation accounts for: 3px gap + 16px icon + 5px margin-right.
*/
#MSearchBox > .left {
  display: flex;
  align-items: center; /* Vertically center icon and input */
  flex: 1 1 auto; /* Allow span to grow/shrink */
  min-width: 0; /* Allows input to shrink if needed */
  max-width: calc(100% - 24px); /* 24px = 3px gap + 16px icon + 5px margin-right; Prevents overflow; adjust if layout changes */
}

/* customizing right side close icon */
#MSearchBox > .right {
  display: flex;
  align-items: center;
  flex: 0 0 auto;
}

#MSearchClose {
  width: 20px !important;
  height: 20px !important;
}
#MSearchCloseImg.close-icon {
  background-color: transparent !important;
  align-items: center;
  left: 3px;
  top: -2px;
}

#MSearchCloseImg.close-icon::before {
  background-color: var(--dp-seach-clear-icon-color) !important;
  width: 14px;
  height: 2px;
}

#MSearchCloseImg.close-icon::after {
  background-color: var(--dp-seach-clear-icon-color) !important;
  width: 14px;
  height: 2px;
}

/* customizing left side search select */

#MSearchSelect > .search-icon-dropdown {
  display: none !important;
}

#MSearchSelect {
  display: inline-flex !important;
  align-items: center !important;
  width: auto !important;
  height: 100% !important;
  padding: 0px !important;
  margin: 0px !important;
  margin-left: 5px !important;
  top: 0px !important;
  left: 0px !important;
  color: var(--dp-text-search-select-color) !important;
}

#MSearchSelect.search-icon::before {
  all: unset !important;
  display: inline-block !important;
  flex: 0 0 auto !important;
  content: "▼" !important;
  font-size: 0.8em !important;
}

#MSearchSelect.search-icon::after {
  all: unset !important;
  display: inline-block !important;
  flex: 0 0 auto !important;
  content: var(--dp-search-field) !important;
  margin-left: 2px !important;
}

#MSearchField {
  box-sizing: border-box;
  position: static !important;
  transform: none !important;
  height: auto !important;
  padding: 0px !important;
  margin: 0 !important;
  margin-left: 3px !important;
  top: 0px !important;
  left: 0px !important;
  line-height: 1.2 !important;
}

/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/
/* DARK MODE TOGGLE BUTTON CUSTOMIZATIONS */
/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/

doxygen-awesome-dark-mode-toggle {
  border-radius: var(--dp-border-radius) !important;
  background-color: transparent !important;
}

doxygen-awesome-dark-mode-toggle > svg {
  fill: var(--dp-icon-color) !important;
  width: 80%;
  height: 80%;
}

doxygen-awesome-dark-mode-toggle:hover > svg {
  fill: var(--dp-icon-hover-color) !important;
  width: 100%;
  height: 100%;
}

@media (prefers-reduced-motion: reduce) {
  doxygen-awesome-dark-mode-toggle,
  doxygen-awesome-dark-mode-toggle > svg {
    transition: none;
  }
}

/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/
/* DUAL SIDEBAR BUTTON CUSTOMIZATIONS */
/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/

/* 
  Styles for the sidebar toggle button (.dp-sidebar-toggle-btn) 
  placed inside #searchBoxPos2 in the main navigation.

  - Ensures button is sized and aligned to match the searchbar and navigation.
  - Uses CSS variables for easy customization (spacing, height, colors, border radius).
  - Designed to blend with other controls and respond visually on hover.
*/

#dp-sidebar-toggle-btn {
  display: grid;
  place-items: center;
  margin-left: 5px !important;
  padding: 0;
  width: var(--searchbar-height) !important;
  height: var(--searchbar-height) !important;
  background: transparent;
  color: var(--dp-icon-color);
  border: none;
  border-radius: var(--dp-border-radius) !important;
  line-height: 1;
  font-size: 22px;
  user-select: none;
  cursor: pointer;
}

#dp-sidebar-toggle-btn > svg {
  width: 80%;
  height: 80%;
}
#dp-sidebar-toggle-btn:hover > svg {
  color: var(--dp-icon-hover-color);
  width: 90%;
  height: 90%;
}
#dp-sidebar-toggle-btn:active > svg {
  width: 50%;
  height: 50%;
}

/* Respect Reduced Motion */
@media (prefers-reduced-motion: reduce) {
  #dp-sidebar-toggle-btn,
  #dp-sidebar-toggle-btn > svg {
    transition: none;
  }
}

/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/
/* SIDE NAV CUSTOMIZATIONS */
/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/

/*
  The '#side-nav' contains the '#nav-tree' and the resizer as well.
  - 'background-color' set to '--page-background-color'. This color is the border around panes.
    Since the '#side-nav' also contains the resizer and the resizer is the separator between
    the panes, we set the background of the '#side-nav' to the background of the pane
    separators and then set the background of '#nav-tree' to our pane color. This way we have
    the appearence of the default side-nav similar to our dual navs.
  - '--tree-item-height': Custom height for each tree item (default 1.3rem, replacing 30px/2rem).
  - min-width: Ensure navigation is touch-friendly (at least 50px wide).
  - background/border: Match theme and provide visual separation.

  NOTE: By default the right-sde border is provided using '.ui-resizable-handle.ui-resizable-e' which
  we restyle as well.
*/
#side-nav {
  background-color: var(--page-background-color) !important;
  left: var(--dp-sep) !important;
  height: var(--dp-main-h) !important;
  --tree-item-height: 1.3rem !important;
  min-width: var(--dp-min-width) !important;
  padding-right: var(--dp-sep) !important;
  border-radius: var(--dp-border-radius) !important;
  border: none !important;
}

#nav-tree {
  background-color: var(--dp-pane-color) !important;
  height: var(--dp-main-h) !important;
  border-radius: var(--dp-border-radius) !important;
  border: none !important;
  padding-left: var(--dp-sep) !important;
  padding-right: var(--dp-sep) !important;
}

/* Provides padding for the top of the content */
#nav-tree-contents {
  padding-top: 8px !important;
}

/* re-styling default resizer */
#side-nav .ui-resizable-handle.ui-resizable-e {
  transition: unset !important;
  box-shadow: none !important;
  width: var(--dp-sep) !important;
  background-color: transparent !important;
  opacity: 1;
}

/* removing the default resize icon since our cursor serves its purpose */
#side-nav .ui-resizable-handle.ui-resizable-e::after {
  display: none !important;
}

/* 
  Expand/collapse icon, make it visible all the time.
  By default it is only visible on hover.
*/
#side-nav #nav-tree-contents span.arrow {
  visibility: visible !important;
  opacity: 1 !important;
}

/* 
  For some reason the first child of any ul never shows the
  expand/collapse icon by default, we change that here.
*/
#nav-tree ul li:first-child > div > a {
  opacity: 1 !important;
  pointer-events: unset !important;
}

/* 
  Change the expand/collapse arrow. The left margin provides space
  for marker of the currently selected item.
*/
#side-nav .item .arrow {
  margin-left: 10px;
  font-size: 0 !important; /* hides any ► text node */
  position: relative; /* so we can place our icon if needed */
  background: transparent;
}

/* removing the default arrowhead and its rotation */
#side-nav .item .arrow .arrowhead {
  width: 0px !important;
  border: none !important;
  transform: rotate(0deg);
  display: inline-block;
  line-height: 1;
  font-size: 1rem;
}

/* assigning a new arrow head expand/collapse icon */
#side-nav .item .arrow .arrowhead::before {
  font-family: "noto-2b9", "Noto Sans Symbols 2", "Segoe UI Symbol", system-ui, sans-serif;
  content: "\2B9E";
  -webkit-font-smoothing: antialiased;
  text-rendering: auto;
  display: inline-block;
  font-size: var(--dp-exp-col-icon-font-size);
  color: var(--page-foreground-color);
  transition: transform 0.25s ease;
}

/* rotate collapsed icon by 90 degrees to make it open, this creates animation. */
#side-nav .item .arrow .arrowhead.opened::before {
  transform: rotate(90deg);
}

/* remove default settings for current or selected item */
#side-nav #nav-tree-contents .item.selected *,
#side-nav #nav-tree-contents .item.current * {
  font-weight: normal !important; /* Remove default bolding */
  text-shadow: none !important; /* Remove text shadow for a flatter look */
  color: inherit !important; /* Use parent color (removes highlight) */
}

/* apply our settings for current and selected item */
#side-nav #nav-tree-contents .item.selected,
#side-nav #nav-tree-contents .item.current {
  margin-top: 3px;
  margin-bottom: 3px;
  padding-top: 3px;
  padding-bottom: 3px;
  color: var(--page-foreground-color) !important;
  background-color: var(--dp-item-color);
  margin-right: 0px;
  border-radius: var(--dp-border-radius) !important;
}

/* change the background on hover */
#side-nav #nav-tree-contents .item:hover {
  background-color: var(--dp-item-hover-color);
  border-radius: var(--dp-border-radius) !important;
}

/* create a small line on the left as marker for current/selected item */
#side-nav #nav-tree-contents .item.selected::after,
#side-nav #nav-tree-contents .item.current::after {
  content: "";
  position: absolute;
  left: 2px;
  top: 5px;
  bottom: 5px;
  width: 4px;
  background: var(--dp-mark-color);
  border-radius: 2px;
  pointer-events: none;
}

/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/
/* DOC HEADER CUSTOMIZATIONS */
/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/

/* 
  In Doxy-Plus.js, we clone the header from #doc-content and insert the clone before 
  #container, making it a direct child of <body>. The original header which
  which is the child of '#doc-content' is left untouched.
  
  DESKTOP VIEW (width > 767px): We hide the original '#doc-content > .header' and show
  our cloned 'body > .header'. This way, in desktop view the header becomes sticky and
  does not scroll with scrolling of the main conetnt.

  MOBILE VIEW (width < 767px): We hide our cloned 'body > .header' and show the original
  '#doc-content > .header'. This way the header is a part of the scrolling main content
  and scrolls with it, giving users extra height to view the content in mobile view.

  - 'body .header' => Both headers
  - 'body > .header' => Desktop view header
  - '#doc-content > .header' => Mobile view header

  NOTE: the selector '>' means "direct child" selector in CSS. So, when we do 'body > .header' then
  it will only apply to 'header' which is a direct child of <body>. If we do not use the '>' selector
  and do 'body .header' then this will apply to any header which is inside the body i.e. child, grand child,
  great grand child,...
  So, 'body .header' will apply to cloned header (because it is direct child of <body>) as well as original
  header, because original header is a child of '#doc-content' and '#doc-content' is a child of <body>.
*/

/* Styling both headers (only one is visible at any time) */
body .header {
  background-color: var(--dp-pane-color) !important;
  border-bottom: var(--dp-doc-header-border) solid var(--separator-color) !important;
}

/*
  Customizing the cloned header.
*/
body > .header {
  display: block !important;
  margin-left: var(--dp-doc-margin-left) !important;
  margin-right: var(--dp-sep) !important;
  border-top-left-radius: var(--dp-border-radius) !important;
  border-top-right-radius: var(--dp-border-radius) !important;
}

/* by default the original header is hidden */
#doc-content > .header {
  display: none !important;
}

/* changing text size and alignment of cloned header */
body > .header > .headertitle > .title {
  font-size: 225% !important;
  text-align: center;
}

/* changing text size of original header */
#doc-content > .header > .headertitle > .title {
  font-size: 150% !important;
}

/* changing margins to make both headers smaller in height*/
body .header > .headertitle > .title {
  margin-top: 0px !important;
  margin-bottom: 0px !important;
}

/* 
  MOBILE VIEW (width <= 767px): Toggle visibility of headers:
    - Hide the desktop (cloned) header.
    - Show the original header inside #doc-content.

  This ensures the correct header appears based on screen size.
*/
@media screen and (max-width: 767px) {
  body > .header {
    display: none !important;
  }
  #doc-content > .header {
    display: block !important;
  }
}

/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/
/* DOC CONTENT CUSTOMIZATIONS */
/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/

#doc-content {
  /*
    Background Color: We need to assign our page color to '--page-background-color'
    variable as well as the background color here. Most parts of the doc-content
    uses the variable '--page-background-color' for background color but some small
    boxes here and there does not use this variable. So, by assigning the same background
    color to both we get a uniform custom background color for doc-conetnt.
  */
  --page-background-color: var(--dp-pane-color) !important; /* Override the page color variable just for doc-content */
  background-color: var(--dp-pane-color) !important; /* Set the background color because some parts use a different variable */

  /* deafult: we set left margin only */
  margin-left: var(--dp-doc-margin-left) !important;

  /* minimum width */
  min-width: var(--dp-min-width) !important;

  /* 
    Height: See top of this page for description of height calculation.
    By default the cloned header is shown whos height is not included in
    the height of the #doc-content and so we subtract its height and its
    bottom border.
  */
  height: calc(100vh - var(--dp-header-height) - var(--dp-doc-header-height) - var(--dp-footer-height) - (4 * var(--dp-sep)) - var(--dp-doc-header-border)) !important; /* fallback for older browsers */
  height: calc(100dvh - var(--dp-header-height) - var(--dp-doc-header-height) - var(--dp-footer-height) - (4 * var(--dp-sep)) - var(--dp-doc-header-border)) !important; /* for use in newer browsers */

  /*
    By default we only set the bottom left corner radius.
    Top left and right corner radius is set on the cloned
    header and bottom right on the #page-nav.
  */
  border-bottom-left-radius: var(--dp-border-radius) !important;
}

/*
  When a page does not have a doc-content header then calculate the
  height differently and set the top left and right corner radius.
*/
body[data-dp-doc-header-not-available] #doc-content {
  height: var(--dp-main-h);
  border-top-left-radius: var(--dp-border-radius) !important;
  border-top-right-radius: var(--dp-border-radius) !important;
}

/*
  When #page-nav is not available on a page then we set the
  bottom right radius as well and also the right side margin.
*/
body[data-dp-page-nav-not-available] #doc-content {
  margin-right: var(--dp-sep);
  border-bottom-right-radius: var(--dp-border-radius) !important;
}

/*
  The h* is the headings inside the doc-content. For some reason the top margin
  for all these are different, although, it all looks the same. That's why we
  are overriding it here to make all of it have same size top margin.
*/
h1, h2, h3, h4, h5 {
  margin-top: 0.5em !important;
}

/*
  MOBILE VIEW (width <= 767px):
  - Set border radius for all four corners.
  - Set the height correctly.
*/
@media screen and (max-width: 767px) {
  #doc-content {
    margin-right: var(--dp-sep);
    height: var(--dp-main-h) !important;
    border-radius: var(--dp-border-radius) !important;
  }
}

/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/
/* PAGE NAV CUSTOMIZATIONS */
/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/

/*
  The #doc-content and #page-nav are in a column wise grid inside #container.
  We make the #doc-content take any and all available width.
*/
#container {
  grid-template-columns: minmax(0, 1fr) max-content !important;
}

/* resize handle of #page-nav */
#page-nav-resize-handle {
  transition: unset !important;
  width: 7px !important;
  margin-left: -4px;
  background-color: transparent !important;
}

/* remove the icon that is drawn since we rely on curosr */
#page-nav-resize-handle::after {
  display: none !important;
}

/* change width of resize handle in mobile view */
@media (pointer: coarse) {
  #page-nav-resize-handle {
    width: 37px !important;
    margin-left: -20px !important;
  }
}

/* page-nav customizations */
#page-nav {
  min-width: var(--dp-min-width) !important;
  background-color: var(--dp-pane-color) !important;
  border-left-width: var(--dp-doc-header-border) !important;
  margin-right: var(--dp-sep) !important;
  border-bottom-right-radius: var(--dp-border-radius) !important;
}


#page-nav-contents {
  top: 0px !important;
  overflow: auto;
}

#page-nav-contents ul.page-outline {
  padding: 5px;
}

/* change individual items inside #page-nav */
#page-nav #page-nav-contents .item {
  display: flex;
  align-items: center;
  min-width: 0;
  white-space: nowrap;
  overflow: hidden;
  padding-right: 3px;
}

#page-nav #page-nav-contents .item span {
  flex: 0 0 auto;
  width: 8px !important;
}

#page-nav #page-nav-contents .item a {
  flex: 1 1 auto;
}

#page-nav #page-nav-contents a {
  min-width: 0;
  white-space: nowrap;
  overflow-x: hidden;
  text-overflow: ellipsis;
}

#page-nav #page-nav-contents a:hover,
#page-nav #page-nav-contents a:focus-visible {
  white-space: normal; /* allow wrapping */
  overflow-wrap: anywhere; /* break long tokens (URLs, hashes) */
  word-break: normal; /* keep dictionary words intact when possible */
  hyphens: auto; /* needs lang="en" (or your language) */
}

#page-nav-contents ul.page-outline li {
  background: var(--dp-pane-color);
}

/* change the text and sizes of individual items inside #page-nav */
#page-nav-contents ul.page-outline li a {
  --page-secondary-foreground-color: var(--page-foreground-color) !important;
  --primary-color: var(--page-foreground-color) !important;
  font-family: var(--font-family-monospace);
  font-size: var(--dp-page-nav-font-size) !important;
  font-weight: unset !important;
  line-height: var(--dp-page-nav-line-height) !important;
}

/* 
  #page-nav adds .vis for items that are currently in view in the
  #doc-content. We render these items like selected items in #sidde-nav
  and root and leaf panes.
*/
#page-nav-contents li.vis {
  background-color: var(--dp-item-color) !important;
}

/* remove the default left bar drawn for .vis items */
#page-nav-contents li.vis::after {
  content: none !important; /* prevents the pseudo-element from existing */
  display: none; /* harmless redundancy */
}

/* 
  In #page section name ids starts with 'nav-header-'. We make it sticky so
  that it is always visible if there are any items in that section currently
  visible in the #doc-content.
*/
#page-nav-contents li[id^="nav-header-"] {
  position: sticky;
  top: 0;
  z-index: 2;
}

/*
  By default the padding on the left is 16px, this is too much, so we
  change it to 8px;
*/
#page-nav-contents li[id^="nav-"] > .item > span {
  padding-left: 8px !important;
}

/*
  Since normal item in #page-nav has ids starting with 'nav-' and section
  headers have ids starting with 'nav-header-'. When we target the normal
  ones (just above) and change its left padding, it also affects the left
  padding of section headers, we here we change it back to 0px.
*/
#page-nav-contents li[id^="nav-header-"] > .item > span {
  padding-left: 0px !important;
}

/*
  To make section headers appear differently we apply different text color
  and different font weight for section header items.
*/
#page-nav-contents ul.page-outline li[id^="nav-header-"] a {
  font-weight: 600 !important;
  color: var(--dp-text-page-nav-section-color) !important;
  --primary-color: var(--dp-text-page-nav-section-color) !important;
}

/*
  Since multiple items can have .vis class in #page-nav we want it to look
  like all items are part of the same group. So that is why we apply the border
  radius and paddings to the first and the last item only.
*/

/* padding and border radius for the first item that has .vis class */
#page-nav-contents li.vis:nth-child(1 of li.vis) {
  padding-top: 3px;
  border-top-left-radius: var(--dp-border-radius);
  border-top-right-radius: var(--dp-border-radius);
}

/* padding and border radius for the last item that has .vis class */
#page-nav-contents li.vis:nth-last-child(1 of li.vis) {
  padding-bottom: 3px;
  border-bottom-left-radius: var(--dp-border-radius);
  border-bottom-right-radius: var(--dp-border-radius);
}

/*
  The last item in #page-nav is a members link which takes you to a different
  html page. We render this item differently.
*/
#page-nav-contents ul.page-outline li:has(> div.item > a[href$="-members.html"]) a {
  font-weight: 600 !important;
  --primary-color: unset !important;
  color: var(--primary-color) !important;
}

/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/
/* DUAL NAV CUSTOMIZATIONS */
/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/

#dp-root-pane,
#dp-leaf-pane {
  position: fixed;
  top: var(--dp-main-y);
  height: var(--dp-main-h);
  list-style: none;
  border: none;
  background-color: var(--dp-pane-color) !important;
  border-radius: var(--dp-border-radius);
  white-space: nowrap;
  overflow-x: hidden;
  overflow-y: auto;
}

#dp-root-pane {
  z-index: 9992;
  left: var(--dp-sep);
  width: var(--dp-root-pane-width);
}

#dp-leaf-pane {
  z-index: 9991;
  left: calc(var(--dp-root-pane-width) + (2 * var(--dp-sep)));
  width: var(--dp-leaf-pane-width);
}

#dp-root-pane-resizer,
#dp-leaf-pane-resizer {
  touch-action: none;
  position: fixed;
  top: var(--dp-main-y);
  height: var(--dp-main-h);
  width: var(--dp-sep);
  background: none;
  cursor: ew-resize;
  cursor: col-resize;
  z-index: 9993;
}

#dp-root-pane-resizer {
  left: calc(var(--dp-root-pane-width) + var(--dp-sep));
}

#dp-leaf-pane-resizer {
  left: calc(var(--dp-root-pane-width) + var(--dp-leaf-pane-width) + (2 * var(--dp-sep)));
}

@media (pointer: coarse) {
  #dp-pri-nav-resizer,
  #dp-sec-nav-resizer {
    width: 35px !important;
    margin-left: -15px !important;
  }
}

.dp-tree-list,
.dp-tree-item,
.dp-tree-line,
.dp-tree-node,
.dp-tree-link {
  -webkit-appearance: none;
  appearance: none;
  list-style: none;
  box-shadow: none;
  background: none;
  text-decoration: none;
  text-align: left;
  font-size: var(--dp-item-font-size);
  line-height: var(--dp-item-line-height);
  padding: 0;
  margin: 0;
  border: 0;
  min-inline-size: 0;
}

#dp-root-pane > ul,
#dp-leaf-pane > ul {
  padding: 8px 5px;
}

#dp-root-pane.dp-pane-has-indented-tree ul ul,
#dp-root-pane.dp-pane-has-indented-tree ul ul {
  margin-left: var(--dp-item-line-height);
}

li.dp-tree-item--has-children > ul {
  display: none;
}

li.dp-tree-item--has-children.dp-tree-item--node-open > ul {
  display: block;
}

.dp-tree-line {
  display: flex;
  position: relative;
  align-items: center;
  padding-left: 5px;
  padding-right: 5px;
  border-radius: var(--dp-border-radius);
  color: var(--page-foreground-color);
  cursor: pointer;
}
li.dp-tree-item--disabled .dp-tree-line {
  color: var(--dp-text-disabled-color);
  cursor: default;
}
li.dp-tree-item--visited:not(.dp-tree-item--current) .dp-tree-line {
  color: var(--dp-text-visited-color);
}
li:not(.dp-tree-item--disabled) .dp-tree-line:hover {
  background: var(--dp-item-hover-color);
}
li.dp-tree-item--current:not(.dp-tree-item--disabled) > .dp-tree-line {
  margin-top: 3px;
  margin-bottom: 3px;
  padding-top: 3px;
  padding-bottom: 3px;
  background: var(--dp-item-color);
}
li.dp-tree-item--current:not(.dp-tree-item--disabled) > .dp-tree-line::before {
  content: "";
  position: absolute;
  left: 2px;
  top: 5px;
  bottom: 5px;
  width: 4px;
  background: var(--dp-mark-color);
  border-radius: 2px;
  pointer-events: none;
}

.dp-tree-node {
  flex: 0 0 auto;
  font-family: "noto-2b9", "Noto Sans Symbols 2", "Segoe UI Symbol", system-ui, sans-serif;
  font-size: var(--dp-exp-col-icon-font-size);
  width: var(--dp-item-line-height);
  text-align: center;
  -webkit-font-smoothing: antialiased;
  text-rendering: auto;
  transition: transform 0.25s ease;
}
li:not(.dp-tree-item--has-children) .dp-tree-node {
  visibility: hidden;
}
li.dp-tree-item--node-open > .dp-tree-line > .dp-tree-node {
  transform: rotate(90deg);
}

#dp-root-pane .dp-tree-link,
#dp-leaf-pane .dp-tree-link {
  flex: 0 1 auto;
  font-family: var(--font-family-monospace) !important;
  font-weight: var(--dp-item-font-weight) !important;
  color: inherit !important;
  cursor: inherit !important;
  min-width: 0;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

#dp-root-pane .dp-tree-link:hover,
#dp-leaf-pane .dp-tree-link:hover {
  text-decoration: none !important;
}

#dp-root-pane li.dp-tree-item--has-children > .dp-tree-line > .dp-tree-link,
#dp-leaf-pane li.dp-tree-item--has-children > .dp-tree-line > .dp-tree-link{
  font-family: var(--font-family) !important;
}

li.dp-tree-item--has-children > .dp-tree-line::after {
  content: "";
  display: block;
  flex: 1 1 auto; /* take remaining space */
  margin-top: 2px;
  align-self: center;
  height: 1px; /* visual thickness */
  /* draw transparent gap then the line, without consuming layout space */
  background: linear-gradient(to right, transparent var(--dp-sep), var(--dp-line-color) var(--dp-sep), var(--dp-line-color) 100%);
  background-repeat: no-repeat;
  background-position: left center;
  background-size: 100% 1px;
  pointer-events: none;
}